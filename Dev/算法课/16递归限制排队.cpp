//6. 带限制条件的排队购票问题-递归和递推
//一场球赛开始前，售票工作正在紧张进行中。每张球票为50元，有m+n个人排队等待购票，其中有m 个人手持50元的钞票，另外n个人手持100元的钞票。这m+n个人排队购票时，特别规定第5位为持50元，第8位为持100元，求出这m+n个人排队购票，使售票处不至出现找不开钱的局面的不同排队种数 。（约定：开始售票时售票处没有零钱，拿同样面值钞票的人对换位置为同一种排队。）
//
//方法一：用递归实现
//  限制(第5位持50元，第8位持100元)购票排队递归设计
#include <stdio.h>

//  限制(第5位持50元，第8位持100元)购票排队递归设计
//long f(int j, int i) {
//    long y;
//    if (i == 0 && j < 8) {
//        y = 1;
//    } else if (j < i || (i == 0 && j >= 8)) {
//        y = 0; // 确定初始条件
//    } else if (j == 4 && i == 1 || j == 3 && i == 2) {
//        y = f(j - 1, i); // 限制第5位
//    } else if (j == 7 && i == 1 || j == 6 && i == 2 || j == 5 && i == 3) {
//        y = f(j, i - 1); // 限制第8位
//    } else {
//        y = f(j - 1, i) + f(j, i - 1); //  实施递归
//    }
//    return y;
//}

long fan(int m, int n)
{
	long y;
	if(n == 0 && m < 8){
		y = 1;
	}else if(m < n || (n == 0 && m >= 8)){
		y = 0;
	}else if(m == 4 && n == 1 || m == 3 && n == 2){
		y = fan(m - 1, n);	
	} else if(m == 7 && n == 1 || m == 6 && n == 2 || m == 5 && n == 3){
		y = fan(m, n - 1);
	}else{
		y = fan(m - 1, n) + fan(m, n - 1);
	}
	return y;
 } 

int main() { //  主函数调用
    int m, n;
    printf(" input m,n(m>n>=8):");
    scanf("%d,%d", &m, &n);
    printf("  f(%d,%d)=%ld\n", m, n, f(m, n));
    return 0;
}
